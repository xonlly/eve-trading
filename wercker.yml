# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: node:6
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - install-packages:
        packages: gcc-4.9 g++-4.9 uuid-dev libssl-dev

    - script:
        name: wtf
        code: |
            env CXX=g++-4.9
            env CC=gcc-4.9
            mkdir ldlocal
            env LDHACK=`pwd`/ldlocal
            env LDFLAGS=-L$LDHACK/lib
            env CFLAGS=-I$LDHACK/include
            env LD_RUN_PATH=$LDHACK/lib
            env LD_LIBRARY_PATH=$LDHACK/lib
            env PKG_CONFIG_PATH=$LDHACK/lib/pkgconfig
            echo $PKG_CONFIG_PATH
            wget http://download.zeromq.org/zeromq-$ZMQ.tar.gz
            tar xzvf zeromq-$ZMQ.tar.gz
            '[ -z "$SODIUM" ] || wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.5.tar.gz'
            '[ -z "$SODIUM" ] || tar xzvf libsodium-$SODIUM.tar.gz'
            '[ -z "$SODIUM" ] || cd libsodium-$SODIUM'
            '[ -z "$SODIUM" ] || ./autogen.sh'
            '[ -z "$SODIUM" ] || ./configure --prefix=$LDHACK'
            '[ -z "$SODIUM" ] || make'
            '[ -z "$SODIUM" ] || make install'
            '[ -z "$SODIUM" ] || cd ..'
            '[ -z "$SODIUM" ] || env LIBS=-lsodium && env sodium_CFLAGS=$CFLAGS && env sodium_LIBS=$LDFLAGS'
            cd zeromq-$ZMQ
            ./autogen.sh
            if [[ -z "$SODIUM" ]]; then ./configure --prefix=$LDHACK; else ./configure --prefix=$LDHACK --with-libsodium=$LDHACK; fi
            make
            make install
            cd ..

    # A step that executes `npm install` command
    - script:
        name: install
        code: env LD_LIBRARY_PATH=$LDHACK/lib LD_RUN_PATH=$LDHACK/lib PKG_CONFIG_PATH=$LDHACK/lib/pkgconfig LDFLAGS=-L$LDHACK/lib CFLAGS=-I$LDHACK/lib/include
    #
    - npm-install
    # A step that executes `npm test` command
    - script:
        name: test
        code: npm run test

    - script:
        name: test functional + report
        code: |
            npm run test:functional:coverage
            npm run coverage:report

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
